{"version":3,"sources":["credentials/firebase.js","functionality/getfcmtoken.js","components/signup.jsx","components/notificationSender.jsx","functionality/getusers.js","functionality/sendNotification.js","routing/index.js","index.js","functionality/swregistration.js"],"names":["fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","messaging","a","requestPermission","then","getfcmtoken","catch","error","console","alert","user","getToken","token","ref","child","set","log","err","requestforpermision","Signup","memo","props","useState","String","name","setName","navigate","useNavigate","className","type","value","autoFocus","onChange","e","target","length","onClick","NotificationSender","users","setUsers","selectedUser","setSelectedUser","title","setTitle","message","setMessage","useEffect","callback","on","snapshot","data","val","Object","values","map","key","placeholder","payload","fetch","method","headers","body","JSON","stringify","NavigationManager","onMessage","path","element","ReactDOM","render","StrictMode","document","getElementById","swConfig","process","navigator","serviceWorker","register","app","RegisterSW"],"mappings":"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","file":"static/js/main.6d9edb3c.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n\nlet config = {\n  apiKey: \"AIzaSyAPFPVbe_p-7o4ODzpGVIEOB5St-7PxbsA\",\n  authDomain: \"quiz-tst.firebaseapp.com\",\n  databaseURL: \"https://quiz-tst.firebaseio.com\",\n  projectId: \"quiz-tst\",\n  storageBucket: \"quiz-tst.appspot.com\",\n  messagingSenderId: \"463133685025\",\n  appId: \"1:463133685025:web:8fa031aeeae54688767a60\",\n  measurementId: \"G-XVTSCFJ50E\",\n};\nlet fire = firebase.initializeApp(config);\nlet db = firebase.database();\nconst messaging = fire.messaging();\n\nexport { fire, db, messaging };\n","import { db, messaging } from \"../credentials/firebase\";\n\nasync function requestforpermision() {\n  await messaging\n    .requestPermission()\n    .then(function () {\n      getfcmtoken();\n    })\n    .catch(function (error) {\n      console.error(\"Unable to get permission to notify.\", error);\n      alert(\"Your Notifications Are Disabled\");\n    });\n}\nexport const getfcmtoken = (user) => {\n  messaging\n    .requestPermission()\n    .then(() => {\n      return messaging.getToken();\n    })\n    .then((token) => {\n      db.ref(\"/fcmToken\").child(user).set({ user, token });\n      console.log(\"Token : \", token);\n    })\n    .catch((err) => {\n      requestforpermision();\n      console.log(err);\n    });\n};\n","import React, { memo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getfcmtoken } from \"../functionality/getfcmtoken\";\n\nexport const Signup = memo((props) => {\n  const [name, setName] = useState(String);\n  let navigate = useNavigate();\n\n  const addUser = () => {\n    getfcmtoken(name);\n    navigate(\"/NotficationSender\");\n  };\n  return (\n    <div className='signUp-container'>\n      <input\n      className='signup-input'\n        type=\"text\"\n        value={name}\n        autoFocus\n        onChange={(e) => setName(e.target.value)}\n      />\n      {name.length > 3 && <button onClick={addUser}>Add me</button>}\n    </div>\n  );\n});\n","import React, { memo, useState, useEffect } from \"react\";\nimport { getUsers } from \"../functionality/getusers\";\nimport { sendNotification } from \"../functionality/sendNotification\";\n\nexport const NotificationSender = memo(() => {\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    getUsers(setUsers);\n  }, []);\n  return (\n    <div className='no-sender'>\n      <div className='no-sender-sub'>\n        \n      <div className=\"dropdown\">\n        <button className=\"dropbtn\">\n          {selectedUser ? selectedUser.user : \"No User Selected\"}\n        </button>\n        <div className=\"dropdown-content\">\n          {users.map((val, key) => (\n            <a onClick={() => setSelectedUser(val)} key={key}>\n              {\" \"}\n              {val.user}{\" \"}\n            </a>\n          ))}\n        </div>\n      </div>\n      <input\n      className='title-input'\n        type=\"text\"\n        onChange={(e) => setTitle(e.target.value)}\n        value={title}\n        placeholder=\"title\"\n        />\n      <textarea\n      className='message-input'\n        onChange={(e) => setMessage(e.target.value)}\n        value={message}\n        placeholder=\"message\"\n        />\n      <button\n        onClick={() => sendNotification({ title, message }, selectedUser.token)}\n        >\n        {\" \"}\n        Send\n      </button>\n    </div>\n        </div>\n  );\n});\n","import { db } from \"../credentials/firebase\";\n\nexport const getUsers = (callback) => {\n  return db.ref(\"fcmToken\").on(\"value\", (snapshot) => {\n    let data = snapshot.val();\n    callback(Object.values(data) || []);\n  });\n};\n","export const sendNotification = (payload, token) => {\n  console.log(\"payload\", payload, \"token\", token);\n  fetch(`http://localhost:8000/${token}/send/notification`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n      \"Access-Control-Allow-Origin\":\"*\"\n    },\n    body: JSON.stringify({ payload }),\n  })\n    .then((data) => {\n      return data;\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { Signup, NotificationSender } from \"../components\";\nimport { messaging } from \"../credentials/firebase\";\n\nconst NavigationManager = () => {\n  messaging.onMessage((payload) => {\n    console.log(\"Message received. \", payload);\n  });\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Signup />} />\n        <Route path=\"/NotficationSender\" element={<NotificationSender />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default NavigationManager;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport NavigationManager from \"./routing\";\nimport RegisterSW from \"./functionality/swregistration\";\nimport \"./style/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <NavigationManager />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nRegisterSW();\n","export default function RegisterSW() {\n  let swConfig = `${process.env.PUBLIC_URL}/swconfig.js`;\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.register(swConfig).then((app) => {\n      console.log(navigator.serviceWorker, \"service worker registration\", app);\n    });\n  }\n}\n"],"sourceRoot":""}